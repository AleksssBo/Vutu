{"ast":null,"code":"var _jsxFileName = \"/Users/Bogdan/Vutu/src/components/Dialogs/DialogsContainer.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport Button from \"../Buttons/Button\";\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport { addMsgActionCreator, updateMessageActionCreator } from \"../../redux/dialogsReducer\";\n\nconst Dialogs = props => {\n  let msg = React.createRef();\n  let action;\n\n  let sendMsg = () => {\n    if (msg.current.value != '') {\n      action = addMsgActionCreator();\n      msg.current.value = null;\n      props.dispatch(action);\n    }\n  };\n\n  let updateMsgText = () => {\n    let msgText = msg.current.value;\n    action = updateMessageActionCreator(msgText);\n    props.dispatch(action);\n  };\n\n  let dialogElements = props.state.dialogs.map(item => React.createElement(Dialog, {\n    name: item.name,\n    id: item.id,\n    gen: item.gen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n  let msgElements = props.state.messages.map(item => React.createElement(Message, {\n    id: item.id,\n    who: item.who,\n    msg: item.msg,\n    gen: item.gen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n  return React.createElement(Dialog, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["/Users/Bogdan/Vutu/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","s","Button","Dialog","Message","addMsgActionCreator","updateMessageActionCreator","Dialogs","props","msg","createRef","action","sendMsg","current","value","dispatch","updateMsgText","msgText","dialogElements","state","dialogs","map","item","name","id","gen","msgElements","messages","who"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,mBAAR,EAA6BC,0BAA7B,QAA8D,4BAA9D;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,MAAIC,GAAG,GAAGT,KAAK,CAACU,SAAN,EAAV;AACA,MAAIC,MAAJ;;AAEA,MAAIC,OAAO,GAAG,MAAM;AAChB,QAAIH,GAAG,CAACI,OAAJ,CAAYC,KAAZ,IAAqB,EAAzB,EAA6B;AACzBH,MAAAA,MAAM,GAAGN,mBAAmB,EAA5B;AACAI,MAAAA,GAAG,CAACI,OAAJ,CAAYC,KAAZ,GAAoB,IAApB;AAEAN,MAAAA,KAAK,CAACO,QAAN,CAAeJ,MAAf;AACH;AACJ,GAPD;;AASA,MAAIK,aAAa,GAAG,MAAM;AACtB,QAAIC,OAAO,GAAGR,GAAG,CAACI,OAAJ,CAAYC,KAA1B;AAGAH,IAAAA,MAAM,GAAGL,0BAA0B,CAACW,OAAD,CAAnC;AACAT,IAAAA,KAAK,CAACO,QAAN,CAAeJ,MAAf;AACH,GAND;;AAUA,MAAIO,cAAc,GAAGV,KAAK,CAACW,KAAN,CAAYC,OAAZ,CAAoBC,GAApB,CAAwBC,IAAI,IAAI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA,IAAI,CAACC,IAAnB;AAAyB,IAAA,EAAE,EAAED,IAAI,CAACE,EAAlC;AAAsC,IAAA,GAAG,EAAEF,IAAI,CAACG,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CAArB;AACA,MAAIC,WAAW,GAAGlB,KAAK,CAACW,KAAN,CAAYQ,QAAZ,CAAqBN,GAArB,CAAyBC,IAAI,IAAI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAEA,IAAI,CAACE,EAAlB;AAAsB,IAAA,GAAG,EAAEF,IAAI,CAACM,GAAhC;AAAqC,IAAA,GAAG,EAAEN,IAAI,CAACb,GAA/C;AAAoD,IAAA,GAAG,EAAEa,IAAI,CAACG,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjC,CAAlB;AAEA,SAAQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACH,CA5BD;;AA8BA,eAAelB,OAAf","sourcesContent":["import React from 'react'\nimport s from './Dialogs.module.css'\nimport Button from \"../Buttons/Button\";\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport {addMsgActionCreator, updateMessageActionCreator} from \"../../redux/dialogsReducer\";\n\n\nconst Dialogs = (props) => {\n\n    let msg = React.createRef()\n    let action\n\n    let sendMsg = () => {\n        if (msg.current.value != '') {\n            action = addMsgActionCreator()\n            msg.current.value = null\n\n            props.dispatch(action)\n        }\n    }\n\n    let updateMsgText = () => {\n        let msgText = msg.current.value\n\n\n        action = updateMessageActionCreator(msgText)\n        props.dispatch(action)\n    }\n\n\n\n    let dialogElements = props.state.dialogs.map(item => <Dialog name={item.name} id={item.id} gen={item.gen}/>)\n    let msgElements = props.state.messages.map(item => <Message id={item.id} who={item.who} msg={item.msg} gen={item.gen}/>)\n\n    return (<Dialog/>)\n}\n\nexport default Dialogs\n"]},"metadata":{},"sourceType":"module"}