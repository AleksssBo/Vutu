{"ast":null,"code":"const SEND_MESSAGE = 'SEND-MESSAGE';\nconst UPDATE_MESSAGE_TEXT = 'UPDATE-MESSAGE-TEXT';\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: \"Викулин Богдан\",\n    gen: \"m\"\n  }, {\n    id: 2,\n    name: \"Саша Протасова\",\n    gen: \"w\"\n  }, {\n    id: 3,\n    name: \"Никита Бондаренко\",\n    gen: \"m\"\n  }, {\n    id: 4,\n    name: \"Эмилия Бондаренко\",\n    gen: \"w\"\n  }],\n  messages: [{\n    id: 1,\n    msg: \"Привет!\",\n    who: \"Богдан\",\n    gen: \"m\"\n  }, {\n    id: 2,\n    msg: \"Приветик, что делаешь?\",\n    who: \"Я\",\n    gen: \"w\"\n  }, {\n    id: 3,\n    msg: \"Учу React.js. А ты?\",\n    who: \"Богдан\",\n    gen: \"m\"\n  }, {\n    id: 4,\n    msg: \"Делаю уроки, как твои дела?\",\n    who: \"Я\",\n    gen: \"w\"\n  }, {\n    id: 6,\n    msg: \"Ладненько мне пора идти)\",\n    who: \"Я\",\n    gen: \"w\"\n  }, {\n    id: 7,\n    msg: \"Давай))\",\n    who: \"Богдан\",\n    gen: \"m\"\n  }],\n  messageText: \"Hi!\"\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_MESSAGE_TEXT:\n      state.messageText = action.text;\n      return state;\n\n    case SEND_MESSAGE:\n      let message = {\n        id: state.messages.length + 2,\n        msg: state.messageText,\n        who: \"Я\",\n        gen: \"w\"\n      };\n      state.messageText = '';\n      state.messages.push(message);\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default dialogsReducer;\nexport const addMsgActionCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateMessageActionCreator = msgText => ({\n  type: UPDATE_MESSAGE_TEXT,\n  text: msgText\n});","map":{"version":3,"sources":["/Users/Bogdan/Vutu/src/redux/dialogsReducer.js"],"names":["SEND_MESSAGE","UPDATE_MESSAGE_TEXT","initialState","dialogs","id","name","gen","messages","msg","who","messageText","dialogsReducer","state","action","type","text","message","length","push","addMsgActionCreator","updateMessageActionCreator","msgText"],"mappings":"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","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE'\nconst UPDATE_MESSAGE_TEXT = 'UPDATE-MESSAGE-TEXT'\n\nlet initialState = {\n\n    dialogs: [\n        {id: 1, name: \"Викулин Богдан\", gen: \"m\"},\n        {id: 2, name: \"Саша Протасова\", gen: \"w\"},\n        {id: 3, name: \"Никита Бондаренко\", gen: \"m\"},\n        {id: 4, name: \"Эмилия Бондаренко\", gen: \"w\"}\n    ],\n\n    messages: [\n        {id: 1, msg: \"Привет!\", who: \"Богдан\", gen: \"m\"},\n        {id: 2, msg: \"Приветик, что делаешь?\", who: \"Я\", gen: \"w\"},\n        {id: 3, msg: \"Учу React.js. А ты?\", who: \"Богдан\", gen: \"m\"},\n        {id: 4, msg: \"Делаю уроки, как твои дела?\", who: \"Я\", gen: \"w\"},\n        {id: 6, msg: \"Ладненько мне пора идти)\", who: \"Я\", gen: \"w\"},\n        {id: 7, msg: \"Давай))\", who: \"Богдан\", gen: \"m\"}\n    ],\n\n    messageText: \"Hi!\"\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case UPDATE_MESSAGE_TEXT:\n            state.messageText = action.text\n            return state\n\n        case SEND_MESSAGE:\n            let message = {\n                id: state.messages.length + 2,\n                msg: state.messageText,\n                who: \"Я\",\n                gen: \"w\"\n            }\n\n            state.messageText = ''\n            state.messages.push(message)\n            return state\n\n        default:\n            return state\n    }\n\n}\n\nexport default dialogsReducer\nexport const addMsgActionCreator = () => ({type: SEND_MESSAGE})\nexport const updateMessageActionCreator = (msgText) => ({type: UPDATE_MESSAGE_TEXT, text: msgText})\n"]},"metadata":{},"sourceType":"module"}